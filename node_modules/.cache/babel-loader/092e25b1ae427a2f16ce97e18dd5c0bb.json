{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\OUP\\\\React\\\\hackernews-react-apollo\\\\src\\\\components\\\\Search.js\";\nimport React, { Component } from 'react';\nimport { withApollo } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Link from './Link';\nconst FEED_SEARCH_QUERY = gql`\n  query FeedSearchQuery($filter: String!) {\n    feed(filter: $filter) {\n      links {\n        id\n        url\n        description\n        createdAt\n        postedBy {\n          id\n          name\n        }\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      links: [],\n      filter: ''\n    };\n\n    this._executeSearch = async () => {\n      const {\n        filter\n      } = this.state;\n      const result = await this.props.client.query({\n        query: FEED_SEARCH_QUERY,\n        variables: {\n          filter\n        }\n      });\n      const links = result.data.feed.links;\n      this.setState({\n        links\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Search\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.setState({\n        filter: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this._executeSearch(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"OK\")), this.state.links.map((link, index) => /*#__PURE__*/React.createElement(Link, {\n      key: link.id,\n      link: link,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default withApollo(Search);","map":{"version":3,"sources":["E:/Project/OUP/React/hackernews-react-apollo/src/components/Search.js"],"names":["React","Component","withApollo","gql","Link","FEED_SEARCH_QUERY","Search","state","links","filter","_executeSearch","result","props","client","query","variables","data","feed","setState","render","e","target","value","map","link","index","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,iBAAiB,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;CAA9B;;AAuBA,MAAMG,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE7BM,KAF6B,GAErB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE;AAFF,KAFqB;;AAAA,SAyB7BC,cAzB6B,GAyBZ,YAAY;AAC3B,YAAM;AAAED,QAAAA;AAAF,UAAa,KAAKF,KAAxB;AACA,YAAMI,MAAM,GAAG,MAAM,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwB;AAC3CA,QAAAA,KAAK,EAAET,iBADoC;AAE3CU,QAAAA,SAAS,EAAE;AAAEN,UAAAA;AAAF;AAFgC,OAAxB,CAArB;AAIA,YAAMD,KAAK,GAAGG,MAAM,CAACK,IAAP,CAAYC,IAAZ,CAAiBT,KAA/B;AACA,WAAKU,QAAL,CAAc;AAAEV,QAAAA;AAAF,OAAd;AACD,KAjC4B;AAAA;;AAO7BW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAEC,CAAC,IAAI,KAAKF,QAAL,CAAc;AAAET,QAAAA,MAAM,EAAEW,CAAC,CAACC,MAAF,CAASC;AAAnB,OAAd,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAME;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKZ,cAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,CADF,EASG,KAAKH,KAAL,CAAWC,KAAX,CAAiBe,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBACpB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAED,IAAI,CAACE,EAAhB;AAAoB,MAAA,IAAI,EAAEF,IAA1B;AAAgC,MAAA,KAAK,EAAEC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CATH,CADF;AAeD;;AAvB4B;;AAoC/B,eAAevB,UAAU,CAACI,MAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\r\nimport { withApollo } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport Link from './Link'\r\n\r\nconst FEED_SEARCH_QUERY = gql`\r\n  query FeedSearchQuery($filter: String!) {\r\n    feed(filter: $filter) {\r\n      links {\r\n        id\r\n        url\r\n        description\r\n        createdAt\r\n        postedBy {\r\n          id\r\n          name\r\n        }\r\n        votes {\r\n          id\r\n          user {\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nclass Search extends Component {\r\n\r\n  state = {\r\n    links: [],\r\n    filter: ''\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          Search\r\n          <input\r\n            type='text'\r\n            onChange={e => this.setState({ filter: e.target.value })}\r\n          />\r\n          <button onClick={() => this._executeSearch()}>OK</button>\r\n        </div>\r\n        {this.state.links.map((link, index) => (\r\n          <Link key={link.id} link={link} index={index} />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  _executeSearch = async () => {\r\n    const { filter } = this.state\r\n    const result = await this.props.client.query({\r\n      query: FEED_SEARCH_QUERY,\r\n      variables: { filter },\r\n    })\r\n    const links = result.data.feed.links\r\n    this.setState({ links })\r\n  }\r\n}\r\n\r\nexport default withApollo(Search)"]},"metadata":{},"sourceType":"module"}
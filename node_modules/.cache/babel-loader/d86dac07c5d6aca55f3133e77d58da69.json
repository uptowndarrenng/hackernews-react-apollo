{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\OUP\\\\React\\\\hackernews-react-apollo\\\\src\\\\components\\\\LinkList.js\";\nimport React, { Component } from 'react';\nimport Link from './Link';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nexport const FEED_QUERY = gql`\n  {\n    feed {\n      links {\n        id\n        createdAt\n        url\n        description\n        postedBy {\n          id\n          name\n        }\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\n_updateCacheAfterVote = (store, createVote, linkId) => {\n  const data = store.readQuery({\n    query: FEED_QUERY\n  });\n  const votedLink = data.feed.links.find(link => link.id === linkId);\n  votedLink.votes = createVote.link.votes;\n  store.writeQuery({\n    query: FEED_QUERY,\n    data\n  });\n};\n\nclass LinkList extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Query, {\n      query: FEED_QUERY,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 31\n        }\n      }, \"Fetching\");\n      if (error) return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }\n      }, \"Error\");\n      const linksToRender = data.feed.links;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, linksToRender.map((link, index) => /*#__PURE__*/React.createElement(Link, {\n        key: link.id,\n        link: link,\n        index: index,\n        updateStoreAfterVote: this._updateCacheAfterVote,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      })));\n    });\n  }\n\n}\n\nexport default LinkList;","map":{"version":3,"sources":["E:/Project/OUP/React/hackernews-react-apollo/src/components/LinkList.js"],"names":["React","Component","Link","Query","gql","FEED_QUERY","_updateCacheAfterVote","store","createVote","linkId","data","readQuery","query","votedLink","feed","links","find","link","id","votes","writeQuery","LinkList","render","loading","error","linksToRender","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,UAAU,GAAGD,GAAI;;;;;;;;;;;;;;;;;;;;;CAAvB;;AAsBPE,qBAAqB,GAAG,CAACC,KAAD,EAAQC,UAAR,EAAoBC,MAApB,KAA+B;AACrD,QAAMC,IAAI,GAAGH,KAAK,CAACI,SAAN,CAAgB;AAAEC,IAAAA,KAAK,EAAEP;AAAT,GAAhB,CAAb;AAEA,QAAMQ,SAAS,GAAGH,IAAI,CAACI,IAAL,CAAUC,KAAV,CAAgBC,IAAhB,CAAqBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYT,MAAzC,CAAlB;AACAI,EAAAA,SAAS,CAACM,KAAV,GAAkBX,UAAU,CAACS,IAAX,CAAgBE,KAAlC;AAEAZ,EAAAA,KAAK,CAACa,UAAN,CAAiB;AAAER,IAAAA,KAAK,EAAEP,UAAT;AAAqBK,IAAAA;AAArB,GAAjB;AACD,CAPD;;AASA,MAAMW,QAAN,SAAuBpB,SAAvB,CAAiC;AAC/BqB,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEjB,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEkB,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBd,MAAAA;AAAlB,KAAD,KAA8B;AAC7B,UAAIa,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,UAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAEX,YAAMC,aAAa,GAAGf,IAAI,CAACI,IAAL,CAAUC,KAAhC;AAEA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGU,aAAa,CAACC,GAAd,CAAkB,CAACT,IAAD,EAAOU,KAAP,kBACjB,oBAAC,IAAD;AACE,QAAA,GAAG,EAAEV,IAAI,CAACC,EADZ;AAEE,QAAA,IAAI,EAAED,IAFR;AAGE,QAAA,KAAK,EAAEU,KAHT;AAIE,QAAA,oBAAoB,EAAE,KAAKrB,qBAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CADF;AAWD,KAlBH,CADF;AAsBD;;AAxB8B;;AA2BjC,eAAee,QAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Link from './Link'\r\nimport { Query } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\n\r\nexport const FEED_QUERY = gql`\r\n  {\r\n    feed {\r\n      links {\r\n        id\r\n        createdAt\r\n        url\r\n        description\r\n        postedBy {\r\n          id\r\n          name\r\n        }\r\n        votes {\r\n          id\r\n          user {\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n_updateCacheAfterVote = (store, createVote, linkId) => {\r\n  const data = store.readQuery({ query: FEED_QUERY })\r\n\r\n  const votedLink = data.feed.links.find(link => link.id === linkId)\r\n  votedLink.votes = createVote.link.votes\r\n\r\n  store.writeQuery({ query: FEED_QUERY, data })\r\n}\r\n\r\nclass LinkList extends Component {\r\n  render() {\r\n    return (\r\n      <Query query={FEED_QUERY}>\r\n        {({ loading, error, data }) => {\r\n          if (loading) return <div>Fetching</div>\r\n          if (error) return <div>Error</div>\r\n\r\n          const linksToRender = data.feed.links\r\n\r\n          return (\r\n            <div>\r\n              {linksToRender.map((link, index) => (\r\n                <Link\r\n                  key={link.id}\r\n                  link={link}\r\n                  index={index}\r\n                  updateStoreAfterVote={this._updateCacheAfterVote}\r\n                />))}\r\n            </div>\r\n          )\r\n        }}\r\n      </Query>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LinkList"]},"metadata":{},"sourceType":"module"}